{"version":3,"sources":["components/feedbackOptions/ButtonContainerStyled.js","components/feedbackOptions/FeedbackOptions.js","components/notification/Notification.js","components/section/Section.js","components/statistics/StatisticsStyled.js","components/statistics/Statistics.js","App.js","index.js"],"names":["ButtonContainer","styled","button","FeedbackOptions","options","onLeaveFeedback","map","option","type","onClick","Notification","message","Section","children","title","className","StatisticsItem","p","Statistics","feedback","total","positivePercentage","App","state","good","neutral","bad","Object","keys","event","target","dataset","setState","prevState","this","getTotal","Math","round","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8QACaA,EAAkBC,IAAOC,OAAV,8W,OCwBbC,EArBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,mCACGD,EAAQE,KAAI,SAACC,GAAD,OACX,cAACP,EAAD,CAEEQ,KAAK,SACL,cAAaD,EACbE,QAASJ,EAJX,SAMGE,GALIA,SCAAG,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,4BAAIA,KCW3BC,EAXC,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,MAAb,OACd,oCACE,oBAAIC,UAAU,eAAd,SAA8BD,IAC7BD,MCJQG,EAAiBf,IAAOgB,EAAV,2DCsBZC,EApBI,SAAC,GAAsD,IAApDd,EAAmD,EAAnDA,QAASe,EAA0C,EAA1CA,SAAUC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC9C,OACE,qCACGjB,EAAQE,KAAI,SAACC,GAAD,OACX,eAACS,EAAD,WACGT,EADH,KACaY,EAASZ,KADDA,MAIvB,wCAAWa,KACX,oDAAuBC,EAAvB,WCyCSC,E,4MA/CbC,MAAQ,CACNC,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPtB,QAAUuB,OAAOC,KAAK,EAAKL,O,EAE3BlB,gBAAkB,SAACwB,GACjB,IAAMtB,EAASsB,EAAMC,OAAOC,QAAQxB,OACpC,EAAKyB,UAAS,SAACC,GAAD,sBAAmB1B,EAAS0B,EAAU1B,GAAU,O,8CAGhE,WACE,OAAO2B,KAAKX,MAAMC,KAAOU,KAAKX,MAAME,QAAUS,KAAKX,MAAMG,M,oBAG3D,WACE,OACE,qCACE,cAAC,EAAD,CAASZ,MAAM,wBAAf,SACE,cAAC,EAAD,CACEV,QAAS8B,KAAK9B,QACdC,gBAAiB6B,KAAK7B,oBAG1B,cAAC,EAAD,CAASS,MAAM,aAAf,SACGoB,KAAKC,WACJ,cAAC,EAAD,CACE/B,QAAS8B,KAAK9B,QACde,SAAUe,KAAKX,MACfH,MAAOc,KAAKC,WACZd,mBACsB,IAApBa,KAAKC,WACDC,KAAKC,MAAOH,KAAKX,MAAMC,KAAOU,KAAKC,WAAc,KACjD,IAIR,cAAC,EAAD,CAAcxB,QAAQ,+B,GAxChB2B,aCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ca050c94.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\nexport const ButtonContainer = styled.button`\r\n  padding: 2px 10px;\r\n  border: 1px solid lightgrey;\r\n  border-radius: 4px;\r\n  background-color: white;\r\n  text-transform: capitalize;\r\n  cursor: pointer;\r\n  transition-duration: 0.4s;\r\n  :hover {\r\n    background-color: lightblue;\r\n    color: white;\r\n    border-color: lightblue;\r\n  }\r\n  :not(:last-child) {\r\n    margin-right: 5px;\r\n  }\r\n`;\r\n","import { React } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { ButtonContainer } from \"./ButtonContainerStyled\";\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <>\r\n      {options.map((option) => (\r\n        <ButtonContainer\r\n          key={option}\r\n          type=\"button\"\r\n          data-option={option}\r\n          onClick={onLeaveFeedback}\r\n        >\r\n          {option}\r\n        </ButtonContainer>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\nexport default FeedbackOptions;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Notification = ({ message }) => <p>{message}</p>;\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Section = ({ children, title }) => (\r\n  <section>\r\n    <h2 className=\"sectionTitle\">{title}</h2>\r\n    {children}\r\n  </section>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StatisticsItem = styled.p`\r\n  text-transform: capitalize;\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { StatisticsItem } from \"./StatisticsStyled\";\r\n\r\nconst Statistics = ({ options, feedback, total, positivePercentage }) => {\r\n  return (\r\n    <>\r\n      {options.map((option) => (\r\n        <StatisticsItem key={option}>\r\n          {option}: {feedback[option]}\r\n        </StatisticsItem>\r\n      ))}\r\n      <p>Total: {total}</p>\r\n      <p>Positive feedback: {positivePercentage}%</p>\r\n    </>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string.isRequired),\r\n  feedback: PropTypes.object.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\nexport default Statistics;\r\n","import { React, Component } from \"react\";\nimport FeedbackOptions from \"./components/feedbackOptions/FeedbackOptions\";\nimport Notification from \"./components/notification/Notification\";\nimport Section from \"./components/section/Section\";\nimport Statistics from \"./components/statistics/Statistics\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  options = Object.keys(this.state);\n\n  onLeaveFeedback = (event) => {\n    const option = event.target.dataset.option;\n    this.setState((prevState) => ({ [option]: prevState[option] + 1 }));\n  };\n\n  getTotal() {\n    return this.state.good + this.state.neutral + this.state.bad;\n  }\n\n  render() {\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={this.options}\n            onLeaveFeedback={this.onLeaveFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {this.getTotal() ? (\n            <Statistics\n              options={this.options}\n              feedback={this.state}\n              total={this.getTotal()}\n              positivePercentage={\n                this.getTotal() !== 0\n                  ? Math.round((this.state.good / this.getTotal()) * 100)\n                  : 0\n              }\n            ></Statistics>\n          ) : (\n            <Notification message=\"No feedback given\"></Notification>\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}